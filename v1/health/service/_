[
  ${
    range(env('CONSUL_NODE_COUNT', 100)).map(
      function(item, i)
      {
        const node = `node-${i}`;
        const service = location.pathname.get(3);
        const ip = fake.internet.ip();
        return `
        {
          "Node":{
            "ID":"7037e928-d9e8-3b58-4712-6f5ded209002",
            "Node":"${node}",
            "Address":"${ip}",
            "Datacenter":"dc1",
            "TaggedAddresses":{"lan":"${ip}","wan":"${ip}"},
            "Meta":{"${service}-network-segment":""},
            "CreateIndex":5,
            "ModifyIndex":6
          },
          "Service":{
            "ID":"${service}",
            "Service":"${service}",
            "Tags":["Tag", "Another Tag"],
            "Address":"",
            "Port":${fake.random.number({min: 1, max: 6553})},
            "EnableTagOverride":false,
            "CreateIndex":5,
            "ModifyIndex":5
          },
          "Checks":[
          ${
            range(env('CONSUL_CHECK_COUNT', 10)).map(
              function(item, j) {
                const passing = i > 7 || j > fake.random.number(4);
                return `
                {
                  "Node":"${node}",
                  "CheckID":"${fake.hacker.noun()}Health",
                  "Name":"${fake.hacker.noun()} Status",
                  "Status":"${ passing ? "passing" : fake.helpers.randomize(['warning', 'critical'])}",
                  "Notes":"Notes in here",
                  "Output":"${ passing ? "happy" : fake.helpers.randomize(['not in a good way', 'not happy'])}",
                  "ServiceID":"",
                  "ServiceName":"",
                  "ServiceTags":["Tag"],
                  "Definition":{},
                  "CreateIndex":5,
                  "ModifyIndex":5
                }
                `;
              }
            )
          }
          ]
        }
        `;
      }
    )
  }
]
