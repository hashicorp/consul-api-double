[
  ${
    range(
      env(
        'CONSUL_SERVICE_COUNT',
        Math.floor(
          (
            Math.random() * env('CONSUL_SERVICE_MAX', 10)
          ) + parseInt(env('CONSUL_SERVICE_MIN', 1))
        )
      )
    ).map(
      function(item, i)
      {
        const kind = !(i % 2) ? 'consul' : 'connect-proxy';
        const name = `service-${Math.floor(i / 2)}${ kind === 'connect-proxy' ? '-proxy' : '' }`;
        return `
          {
            "Name":"${name}",
${typeof location.search.ns !== 'undefined' ? `
            "Namespace": "${location.search.ns}",
` : ``}
            "Tags": [
                ${
                    range(
                      env(
                        'CONSUL_TAG_COUNT',
                        Math.floor(
                          (
                            Math.random() * env('CONSUL_TAG_MAX', 10)
                          ) + parseInt(env('CONSUL_TAG_MIN', 1))
                        )
                      )
                    ).map(
                      function(item, i)
                      {
                          return `"${fake.hacker.noun()}"`;
                      }
                    )
                }
            ],
            "Kind": "${kind}",
            "InstanceCount": ${fake.random.number({min: 1, max: 4000})},
${ fake.random.number({min: 1, max: 10}) > 2 ? `
            "ExternalSources": [
                ${
                    range(fake.random.number({min: 1, max: 1})).map(
                        function(item, i)
                        {
                            return `"${fake.helpers.randomize(['consul', 'nomad', 'terraform', 'kubernetes', 'aws', ''])}"`;
                        }
                    )
                }

            ],
` : `` }
            "Nodes":[
              ${
                range(env('CONSUL_NODE_COUNT', 100)).map(
                  function(item, i)
                  {
                    return `"node-${i}"`;
                  }
                )
              }
            ],
            "ChecksPassing":${fake.random.number({min: 1, max: env('CONSUL_CHECK_COUNT', fake.random.number(10))})},
            "ChecksWarning":${fake.random.number({min: 0, max: env('CONSUL_CHECK_COUNT', fake.random.number(10))})},
            "ChecksCritical":${fake.random.number({min: 0, max: env('CONSUL_CHECK_COUNT', fake.random.number(10))})}
          }
        `;
      }
    )
  }
]
